package com.mycompany.pi_art;


import static com.codename1.ui.CN.*;
import com.codename1.ui.Display;
import com.codename1.ui.Form;
import com.codename1.ui.Dialog;
import com.codename1.ui.Label;
import com.codename1.ui.plaf.UIManager;
import com.codename1.ui.util.Resources;
import com.codename1.io.Log;
import com.codename1.ui.Toolbar;
import java.io.IOException;
import com.codename1.ui.layouts.BoxLayout;
import com.codename1.io.NetworkEvent;
import com.codename1.ui.Button;
import com.codename1.ui.Container;
import com.codename1.ui.TextField;
import com.codename1.ui.layouts.BorderLayout;
import com.mycompany.forms.AddProdForm;
import com.mycompany.forms.Login;
import com.mycompany.forms.recForm;

/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename One</a> for the purpose 
 * of building native mobile applications using Java.
 */
public class MyApplication {

    private Form current;
    private Resources theme;

    Resources resourceObjectInstance;

    public void init(Object context) {
        // use two network threads instead of one
        updateNetworkThreadCount(2);

        theme = UIManager.initFirstTheme("/theme");

        // Enable Toolbar on all Forms by default
        Toolbar.setGlobalToolbar(true);

        // Pro only feature
        Log.bindCrashProtection(true);

        addNetworkErrorListener(err -> {
            // prevent the event from propagating
            err.consume();
            if(err.getError() != null) {
                Log.e(err.getError());
            }
            Log.sendLogAsync();
            Dialog.show("Connection Error", "There was a networking error in the connection to " + err.getConnectionRequest().getUrl(), "OK", null);
        });        
    }
    
        public void start() {
        Form hi = new Form("Hi World", BoxLayout.y());
        Toolbar tb = hi.getToolbar();
       Button bprod = new Button("addprod");
       bprod.addActionListener((e2) ->{new AddProdForm().show();});
       Button bmap = new Button("map");
       bmap.addActionListener((e2) ->{MapForm mp=new MapForm(); 
        hi.add(mp.f);});
       Button breclamation = new Button("complaint");
       breclamation.addActionListener((e2) ->{ new recForm(resourceObjectInstance).show();});
             Button btevent = new Button("EVENT");
       btevent.addActionListener((e2) ->{ new Login(hi).show();});

        Container topBar = BorderLayout.east(new Label("artisty world"));
     
        topBar.add(BorderLayout.SOUTH, new Label("Cool App Tagline...", "SidemenuTagline"));
         topBar.add(BorderLayout.SOUTH, new Label("Cool App Tagline...", "SidemenuTagline"));
         
        topBar.setUIID("SideCommand");
        tb.addComponentToSideMenu(topBar);
          tb.addComponentToSideMenu(bprod);
           tb.addComponentToSideMenu(bmap);
          tb.addComponentToSideMenu(breclamation);
       tb.addComponentToSideMenu(btevent);
       
      
      
        
     
    
        hi.show();
        
      // new MapForm();
        
    }
       

    public void stop() {
        current = getCurrentForm();
        if(current instanceof Dialog) {
            ((Dialog)current).dispose();
            current = getCurrentForm();
        }
    }
    
    public void destroy() {
    }

}
